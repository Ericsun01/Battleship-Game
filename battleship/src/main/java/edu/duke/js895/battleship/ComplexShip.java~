package edu.duke.js895.battleship;

import java.util.HashSet;

public class ComplexShip<T> extends BasicShip<T> {
    final String name;

    public ComplexShip(String name, Coordinate upperLeft, ShipDisplayInfo<T> myDisplayInfo, ShipDisplayInfo<T> enemyDisplayInfo) {      
        super(takeCoords(upperLeft, name), myDisplayInfo, enemyDisplayInfo);
        this.name = name;
    }

    public ComplexShip(String name, Coordinate upperLeft, T data, T onHit) {
        this(name, upperLeft, new SimpleShipDisplayInfo<T>(data, onHit), new SimpleShipDisplayInfo<T>(null, data));
    }

    static HashSet<Coordinate> takeCoords(Coordinate upperLeft, String name) {
        HashSet<Coordinate> ans = new HashSet<Coordinate>();
        int startRow = upperLeft.getRow();
        int startColumn = upperLeft.getColumn();
        // based on Up position
        if (name == "Battleship") {  
            ans.add(new Coordinate(startRow, startColumn+1));
            for (int i=0; i<3; i++) {
                ans.add(new Coordinate(startRow+1, startColumn+i));
            }
        } else if (name == "Carrier") {
            for (int i=0; i<3; i++) {
                ans.add(new Coordinate(startRow+i, startColumn));
            }
            for (int i=2; i<5; i++) {
                ans.add(new Coordinate(startRow+i, startColumn+1));
            }
        }
        return ans;
    }

      /**
     * return the name of this ship
     */
    public String getName() {
        return this.name;
    }
}
